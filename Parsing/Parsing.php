<?php

/**
 * $html - кусок html с текстом из парсинга;
 * $arrayBadWords - исключаемые слова, заполняемые пользователем;
 *
 * Нужно обработать $text. Сформировать массивы, который будет содержать встречаемые слова с их количеством в тексте, отсортировать по количеству
 * Нужно всегда исключать слова или словосочетания из массива $arrayBadWords при формировании итоговых результатов, их там быть не должно.
 *
 * $result_1 - Учитывать все слова без тегов, но без значений внутри title= и alt=
 * $result_2 - Учитывать все слова без тегов, в том числе контент из title= и alt=
 * $result_3 - Учитывать словесный контент только из внутренности title= и alt= без остального текста
 * $result_4 - Учитывать все слова без тегов, в том числе из title= и alt=, не учитывать текст внутри тега <noindex></noindex>
 * $result_5 - Учитывать все слова без тегов, но без значений внутри title= и alt=, не учитывать текст внутри тега <noindex></noindex>
 *
 * Примерный вид результатов (ключ - количество встречаемости, значение - слово):
 *
 * $result_N = [
 * 2 => 'применяются'
 * 3 => 'как'
 * 4 => 'леса'
 * ...
 * ];
 *
 */
?>


<?php
require 'phpQuery-onefile.php';
//url сайта
// $html = file_get_contents('');

$html = '<p><b>Строительные хомутовые</b> леса на рынке имеют такое же большое распространение, как и прочие аналоги данного товара. В каталоге нашей компании представлено большое количество товаров в данной <span class="decor" title="Категория товара">категории</span>, вследствие чего есть возможность подобрать такой вариант, который будет максимально отвечать требованиям потенциального покупателя.</b>

<p>При необходимости можно будет получить помощь и консультирование от специалиста компании в вопросах, которые имеют непосредственное отношение к выбору подходящего товара, а также к оформлению заказа на его приобретение.<noindex>А с какой целью вообще применяются хомуторвые леса?</noindex> И из чего они состоят?</p>

<p>Строительные хомутовые леса на рынке имеют такое же большое распространение, как и прочие аналоги данного товара. В каталоге нашей компании представлено большое количество товаров в данной категории, вследствие чего есть возможность подобрать такой <span class="decor" alt="Вариация товара" title="Вариация">вариант</span>, который будет максимально отвечать требованиям потенциального покупателя.</p>

<p>При необходимости можно будет получить помощь и консультирование от специалиста компании в вопросах, которые имеют непосредственное отношение к выбору подходящего товара, а также к оформлению заказа на его приобретение.<noindex> А с какой целью вообще применяются хомуторвые леса?</noindex> И из чего они состоят?</p>';

//Исключаемые слова, заполняемые пользователем
$arrayBadWords = [
	'строительные',
	'хомутовые',
	'аналоги',
	'же',
	'в',
	'и',
	''
];



class Result
{
	public $data;
	public function getText($text)
	{
		$doc = phpQuery::newDocument($text);
		//Считывание текста
		// $result = ($doc->find("'")->text()) . ($doc->find("span")->attr('title'));
		$entry = $doc->find("");
		$data = pq($entry)->text();
		$this->data = $data;

		// $data['title'] = array();
		// $entry = $doc->find("span.decore title");
		// foreach ($entry as $row) {
		// 	$data['title'] = pq($row)->text;
		// }
		// echo $data['title'];
	}


	public function strToArray($badWords)
	{
		$data = $this->data;
		//Удаление знаков препинания
		$data = preg_replace('#[^a-zA-Za-яА-Я0-9]#', ' ', $data);

		//Преобразование str в array
		$data = explode(" ", $data);
		//Преобразование значений массива в нижний регистр
		foreach ($data as &$value) {
			$value = mb_strtolower($value);
		}
		//Удаление из $result повторяющихся элементов с $badWords
		$data = array_diff($data, $badWords);
		//Возвращает массив, ключами которого являются значения массива $result, а значениями - количество повторений значений $result
		$data = array_count_values($data);
		//Удаление из $result " "
		unset($data[""]);
		//Сортировка
		arsort($data);
		//Вывод
		echo "Результат выполнения функции strToArray: ";
		print_r($data);
	}
}

$result_1 = new Result();
$result_1->getText($html);
$result_1->strToArray($arrayBadWords);


class Result_1 extends Result
{
}
